name: Release

permissions:
    contents: write

on:
    push:
        tags:
            - "v*.*.*"

jobs:
    create-release:
        runs-on: ubuntu-latest
        outputs:
            upload_url: ${{ steps.create_release.outputs.upload_url }}

        steps:
            - uses: actions/checkout@v4

            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: Release ${{ github.ref }}
                  body: |
                      ## Changes in this Release
                      - Bug fixes and improvements
                      - See CHANGELOG.md for detailed changes
                  draft: false
                  prerelease: false

    build-and-upload:
        needs: create-release
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]

        steps:
            - uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.11"

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt
                  pip install pyinstaller

            - name: Build executable (Linux)
              if: runner.os == 'Linux'
              run: |
                  pyinstaller --onefile --windowed --name "HoodieWeather-linux" weather_widget_app.py
                  cd output/dist && tar -czf HoodieWeather-linux.tar.gz HoodieWeather-linux

            - name: Build executable (Windows)
              if: runner.os == 'Windows'
              run: |
                  pyinstaller --onefile --windowed --name "HoodieWeather-windows.exe" weather_widget_app.py
                  cd output/dist && powershell Compress-Archive HoodieWeather-windows.exe HoodieWeather-windows.zip

            - name: Build executable (macOS)
              if: runner.os == 'macOS'
              run: |
                  pyinstaller --onefile --windowed --name "HoodieWeather-macos" weather_widget_app.py
                  cd output/dist && tar -czf HoodieWeather-macos.tar.gz HoodieWeather-macos

            - name: Upload Release Asset (Linux)
              if: runner.os == 'Linux'
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ needs.create-release.outputs.upload_url }}
                  asset_path: ./output/dist/HoodieWeather-linux.tar.gz
                  asset_name: HoodieWeather-linux.tar.gz
                  asset_content_type: application/gzip

            - name: Upload Release Asset (Windows)
              if: runner.os == 'Windows'
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ needs.create-release.outputs.upload_url }}
                  asset_path: ./output/dist/HoodieWeather-windows.zip
                  asset_name: HoodieWeather-windows.zip
                  asset_content_type: application/zip

            - name: Upload Release Asset (macOS)
              if: runner.os == 'macOS'
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ needs.create-release.outputs.upload_url }}
                  asset_path: ./output/dist/HoodieWeather-macos.tar.gz
                  asset_name: HoodieWeather-macos.tar.gz
                  asset_content_type: application/gzip
